// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pool.Data;

#nullable disable

namespace Pool.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241219234853_AddGuideIdToActivity")]
    partial class AddGuideIdToActivity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ActivitySwimmer", b =>
                {
                    b.Property<int>("ActivitySwimmersId")
                        .HasColumnType("int");

                    b.Property<int>("SwimmerActivitiesId")
                        .HasColumnType("int");

                    b.HasKey("ActivitySwimmersId", "SwimmerActivitiesId");

                    b.HasIndex("SwimmerActivitiesId");

                    b.ToTable("ActivitySwimmer");
                });

            modelBuilder.Entity("Pool.Core.models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityDay")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("BeginHour")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("EndHour")
                        .HasColumnType("time");

                    b.Property<int>("GuideId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GuideId");

                    b.ToTable("activities");
                });

            modelBuilder.Entity("Pool.Core.models.Guide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("GenderGuide")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Tz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("guides");
                });

            modelBuilder.Entity("Pool.Core.models.Swimmer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("GenderSwimmer")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Tz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("swimmers");
                });

            modelBuilder.Entity("ActivitySwimmer", b =>
                {
                    b.HasOne("Pool.Core.models.Swimmer", null)
                        .WithMany()
                        .HasForeignKey("ActivitySwimmersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pool.Core.models.Activity", null)
                        .WithMany()
                        .HasForeignKey("SwimmerActivitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pool.Core.models.Activity", b =>
                {
                    b.HasOne("Pool.Core.models.Guide", "Guide")
                        .WithMany("GuideActivities")
                        .HasForeignKey("GuideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guide");
                });

            modelBuilder.Entity("Pool.Core.models.Guide", b =>
                {
                    b.Navigation("GuideActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
